upstream {{ app_name }}_backend {
    {% for server in backend_servers | default(['localhost:3000']) %}
    server {{ server }};
    {% endfor %}
}

server {
    listen 80;
    server_name {{ server_name }};
    
    {% if ssl_enabled | default(false) %}
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name {{ server_name }};
    
    ssl_certificate {{ ssl_cert_path | default('/etc/ssl/certs/' + server_name + '.crt') }};
    ssl_certificate_key {{ ssl_key_path | default('/etc/ssl/private/' + server_name + '.key') }};
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    {% endif %}
    
    # Logging
    access_log {{ log_dir | default('/var/log/nginx') }}/{{ app_name }}_access.log;
    error_log {{ log_dir | default('/var/log/nginx') }}/{{ app_name }}_error.log;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Static files
    location /static {
        alias {{ static_dir | default('/var/www/' + app_name + '/static') }};
        expires {{ static_expires | default('30d') }};
        add_header Cache-Control "public, immutable";
    }
    
    # Application proxy
    location / {
        proxy_pass http://{{ app_name }}_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout {{ proxy_timeout | default('60s') }};
        proxy_send_timeout {{ proxy_timeout | default('60s') }};
        proxy_read_timeout {{ proxy_timeout | default('60s') }};
    }
    
    {% if health_check_path is defined %}
    # Health check endpoint
    location {{ health_check_path }} {
        access_log off;
        proxy_pass http://{{ app_name }}_backend{{ health_check_path }};
    }
    {% endif %}
}